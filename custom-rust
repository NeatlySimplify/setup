# ===== Stage 2: Rust Dev =====
FROM rust:1.82-slim

COPY --from=helix-builder /out /opt/helix
ENV PATH="/opt/helix:${PATH}"
ENV REPO="https://raw.githubusercontent.com/NeatlySimplify/setup/main"

RUN apt-get update && apt-get install -y \
    git curl ripgrep jq && \
    rm -rf /var/lib/apt/lists/*

# Download latest Helix AppImage dynamically
RUN APPIMAGE_URL=$(curl -s https://api.github.com/repos/helix-editor/helix/releases/latest \
    | jq -r '.assets[] | select(.name | endswith(".AppImage")) | .browser_download_url' | head -n 1) && \
    echo "Downloading $APPIMAGE_URL" && \
    curl -L "$APPIMAGE_URL" -o helix.AppImage && \
    chmod +x helix.AppImage && \
    ./helix.AppImage --appimage-extract && \
    mv squashfs-root /opt/helix && \
    ln -s /opt/helix/AppRun /usr/local/bin/hx && \
    rm helix.AppImage

RUN rustup component add clippy rust-src rustfmt rust-analyzer

RUN mkdir -p "$HOME/.config/helix/"

RUN curl --retry 5 --retry-delay 3 -fsSL "$REPO/helix-lsp.toml" -o "$HOME/.config/helix/languages.toml"
RUN curl --retry 5 --retry-delay 3 -fsSL "$REPO/helix-ignore.ignore" -o "$HOME/.config/helix/.ignore"

WORKDIR /home
ENTRYPOINT ["hx"]
