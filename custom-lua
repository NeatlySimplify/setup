# ===== Lua Dev =====
FROM nickblah/lua:5-bookworm

ENV REPO="https://raw.githubusercontent.com/NeatlySimplify/setup/main"

ENV HELIX="https://api.github.com/repos/helix-editor/helix/releases/latest"

RUN apt-get update && apt-get install -y \
    git curl ripgrep jq ninja-build gcc g++ && \
    rm -rf /var/lib/apt/lists/*

# Download latest Helix AppImage dynamically
RUN APPIMAGE_URL=$(curl -s "$HELIX" \
    | jq -r '.assets[] | select(.name | endswith(".AppImage")) | .browser_download_url' | head -n 1) && \
    echo "Downloading $APPIMAGE_URL" && \
    curl -L "$APPIMAGE_URL" -o helix.AppImage && \
    chmod +x helix.AppImage && \
    ./helix.AppImage --appimage-extract && \
    mv squashfs-root /opt/helix && \
    ln -s /opt/helix/AppRun /usr/local/bin/hx && \
    rm helix.AppImage

WORKDIR /opt

RUN git clone --depth 1 https://github.com/LuaLS/lua-language-server && \
    cd lua-language-server; \
    ./make.sh

RUN echo '#!/bin/bash\nexec /opt/lua-language-server/bin/lua-language-server "$@"' \
    > /usr/local/bin/lua-language-server && chmod +x /usr/local/bin/lua-language-server
    

RUN mkdir -p "$HOME/.config/helix/"

RUN curl --retry 5 --retry-delay 3 -fsSL "$REPO/helix-lsp.toml" -o "$HOME/.config/helix/languages.toml"

RUN curl --retry 5 --retry-delay 3 -fsSL "$REPO/helix-ignore.ignore" -o "$HOME/.config/helix/.ignore"

WORKDIR /home/add

ENTRYPOINT ["hx"]
